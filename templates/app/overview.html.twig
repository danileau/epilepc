{% extends 'app/base.html.twig' %}

{% block body %}
<div class="container">
    <!-- Page Heading -->
    <div class="mb-3">
        <div class="text-center">
            <h1 class="h3 text-gray-800 justify-content-center border-bottom pb-2">Übersicht vom {{ date }}</h1>
        </div>
        <div class="mt-5 text-center">
            <div class="col-lg-12">

                <!-- Default Card Example -->
                <div class="card mb-4">
                    <div class="card-header">
                        Information
                    </div>
                    <div class="card-body">
                        In der Übersicht und im PDF werden die Tagebucheinträge nicht angezeigt
                    </div>
                </div>

            </div>
            <button class="btn btn-primary mb-5"><a href="{{ path('app_overview_pdf') }}" target="_blank" style="color: white"><b>PDF generieren</b></a></button>
        </div>
    </div>

    <div class="row">
        <!-- Area Chart -->
        <div class="col-xl-8 col-lg-7" id="AreaChart">
            <div class="card shadow mb-4">
                <!-- Card Header - Dropdown -->
                <div class="card-header py-3 d-flex flex-row align-items-center justify-content-between">
                    <h6 class="m-0 font-weight-bold text-secondary">Deine Übersicht vom letzten Jahr</h6>
                </div>
                <!-- Card Body -->
                <div class="card-body">
                    <div class="chart-area">
                        <canvas id="myAreaChart"></canvas>
                    </div>

                    <p><i>Tipp: Mit einem Klick auf der obenstehenden Legende, können Linien aus und eingeblendet werden</i></p>
                </div>
            </div>
        </div>

        <!-- Pie Chart -->
        <div class="col-xl-4 col-lg-5">
            <div class="card shadow mb-4">
                <!-- Card Header - Dropdown -->
                <div class="card-header py-3 d-flex flex-row align-items-center justify-content-between">
                    <h6 class="m-0 font-weight-bold text-secondary">Was wurde wie oft erfasst?</h6>
                </div>
                <!-- Card Body -->
                <div class="card-body">
                    <div class="chart-pie pt-4 pb-2">
                        <canvas id="myPieChart"></canvas>
                    </div>
                    <div class="mt-4 text-center small">
                <span class="mr-2">
                  <i class="fas fa-circle text-danger"></i> Anfälle
                </span>
                <span class="mr-2">
                  <i class="fas fa-circle text-success"></i> Ereignisse
                </span>
               <!-- <span class="mr-2">
                  <i class="fas fa-circle text-primary"></i> Tagebucheinträge
                </span>-->
                <span class="mr-2">
                  <i class="fas fa-circle text-warning"></i> Medikationen
                </span>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-xl">
            <div class="card shadow mb-4">
                <!-- Card Header - Dropdown -->
                <div class="card-header py-3 d-flex flex-row align-items-center justify-content-between">
                    <h6 class="m-0 font-weight-bold text-secondary">Sämtliche erfassten Daten</h6>
                </div>
                <!-- Card Body -->
                <div class="card-body">
                    <div class="table-responsive">
                        <table class="table table-bordered" id="dataTable" width="100%" cellspacing="0" data-sort-name="title" data-sort-order="desc">
                            <thead>
                            <tr>
                                <th data-field="date">Datum</th>
                                <th data-field="title">Beschreibung</th>
                                <th>Typ</th>
                                <th>Aktionen</th>
                            </tr>
                            </thead>
                            <tbody>
                            {% for seizure in seizures %}
                                <tr>
                                    <td><span class="hidden">{{ seizure.timestampWhen ? seizure.timestampWhen|date('Y/m/d') : '' }}</span>{{ seizure.timestampWhen ? seizure.timestampWhen|date('d.m.Y H:i') : '' }} Uhr</td>
                                    <td>{{ seizure.title }}</td>
                                    <td>Anfall</td>
                                    <td align="center">
                                        <a href="{{ path('seizure_show', {'id': seizure.id}) }}" class="text-seizure"><i class="fas fa-fw fa-search"></i></a> -
                                        <a href="{{ path('seizure_edit', {'id': seizure.id}) }}" class="text-seizure"><i class="fas fa-fw fa-edit"></i></a>
                                    </td>
                                </tr>
                            {% endfor %}
                            {% for event in events %}
                                <tr>
                                    <td><span class="hidden">{{ event.timestampWhen ? event.timestampWhen|date('Y/m/d') : '' }}</span>{{ event.timestampWhen ? event.timestampWhen|date('d.m.Y H:i') : '' }} Uhr</td>
                                    <td>{{ event.name }}</td>
                                    <td>Ereignis</td>
                                    <td align="center">
                                        <a href="{{ path('event_show', {'id': event.id}) }}" class="text-event"><i class="fas fa-fw fa-search"></i></a> -
                                        <a href="{{ path('event_edit', {'id': event.id}) }}" class="text-event"><i class="fas fa-fw fa-edit"></i></a>
                                    </td>
                                </tr>
                            {% endfor %}
                            {% for medication in medications %}
                                <tr>
                                    <td><span class="hidden">{{ medication.timestampPrescription ? medication.timestampPrescription|date('Y/m/d') : '' }}</span>{{ medication.timestampPrescription ? medication.timestampPrescription|date('d.m.Y H:i') : '' }} Uhr</td>
                                    <td>{{ medication.name }}</td>
                                    <td>Medikation</td>
                                    <td align="center">
                                        <a href="{{ path('medication_show', {'id': medication.id}) }}" class="text-medication"><i class="fas fa-fw fa-search"></i></a> -
                                        <a href="{{ path('medication_edit', {'id': medication.id}) }}" class="text-medication"><i class="fas fa-fw fa-edit"></i></a>
                                    </td>
                                </tr>
                            {% endfor %}
                           {#{% for diaryentry in diaryentrys %}
                                <tr>
                                    <td><span class="hidden">{{ diaryentry.timestampWhen ? diaryentry.timestampWhen|date('Y/m/d') : '' }}</span>{{ diaryentry.timestampWhen ? diaryentry.timestampWhen|date('d.m.Y H:i') : '' }} Uhr</td>
                                    <td>{{ diaryentry.title }}</td>
                                    <td>Tagebucheintrag</td>
                                    <td align="center">
                                        <a href="{{ path('diaryentry_show', {'id': diaryentry.id}) }}" class="text-diary"><i class="fas fa-fw fa-search"></i></a> -
                                        <a href="{{ path('diaryentry_edit', {'id': diaryentry.id}) }}" class="text-diary"><i class="fas fa-fw fa-edit"></i></a>
                                    </td>
                                </tr>
                            {% endfor %}#}
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
{% endblock %}

{% block javascripts %}
    <!-- Bootstrap core JavaScript-->
    <script src="{{ asset('application/vendor/jquery/jquery.min.js') }}"></script>
    <script src="{{ asset('application/vendor/bootstrap/js/bootstrap.bundle.min.js') }}"></script>
    <script src="{{ asset('application/vendor/jquery-ui/jquery-ui.js') }}"></script>

    <!-- Core plugin JavaScript-->
    <script src="{{ asset('application/vendor/jquery-easing/jquery.easing.min.js') }}"></script>
    <!-- Custom scripts for all pages-->
    <script src="{{ asset('application/js/sb-admin-2.js') }}"></script>
    <script src="{{ asset('application/vendor/datatables/jquery.dataTables.js') }}"></script>
    <script src="{{ asset('application/vendor/datatables/moment.js') }}" type="text/javascript"></script>
    <script src="{{ asset('application/vendor/datatables/dataTables.bootstrap4.js') }}"></script>
    <!-- Page level plugins -->
    <script src="{{ asset('application/vendor/chart.js/Chart.min.js') }}"></script>
{% endblock %}
{% block zusStylesheets %}
    <link href="{{ asset('application/vendor/datatables/dataTables.bootstrap4.css') }}" rel="stylesheet">
{% endblock %}

{% block jsCharts %}
    // Set new default font family and font color to mimic Bootstrap's default styling
    Chart.defaults.global.defaultFontFamily = 'Nunito', '-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,"Helvetica Neue",Arial,sans-serif';
    Chart.defaults.global.defaultFontColor = '#858796';

    function number_format(number, decimals, dec_point, thousands_sep) {
    // *     example: number_format(1234.56, 2, ',', ' ');
    // *     return: '1 234,56'
    number = (number + '').replace(',', '').replace(' ', '');
    var n = !isFinite(+number) ? 0 : +number,
    prec = !isFinite(+decimals) ? 0 : Math.abs(decimals),
    sep = (typeof thousands_sep === 'undefined') ? ',' : thousands_sep,
    dec = (typeof dec_point === 'undefined') ? '.' : dec_point,
    s = '',
    toFixedFix = function(n, prec) {
    var k = Math.pow(10, prec);
    return '' + Math.round(n * k) / k;
    };
    // Fix for IE parseFloat(0.55).toFixed(0) = 0;
    s = (prec ? toFixedFix(n, prec) : '' + Math.round(n)).split('.');
    if (s[0].length > 3) {
    s[0] = s[0].replace(/\B(?=(?:\d{3})+(?!\d))/g, sep);
    }
    if ((s[1] || '').length < prec) {
    s[1] = s[1] || '';
    s[1] += new Array(prec - s[1].length + 1).join('0');
    }
    return s.join(dec);
    }

    // Area Chart
    var ctx = document.getElementById("myAreaChart");
    var myLineChart = new Chart(ctx, {
    type: 'line',
    data: {
    labels: {{ seizure_month|raw }},
    datasets: [{
    label: "Anfälle",
    lineTension: 0.3,
    backgroundColor: "rgba(231, 74, 59, 0.05)",
    borderColor: "rgba(231, 74, 59, 1)",
    pointRadius: 3,
    pointBackgroundColor: "rgba(231, 74, 59, 1)",
    pointBorderColor: "rgba(231, 74, 59, 1)",
    pointHoverRadius: 3,
    pointHoverBackgroundColor: "rgba(231, 74, 59, 1)",
    pointHoverBorderColor: "rgba(231, 74, 59, 1)",
    pointHitRadius: 10,
    pointBorderWidth: 2,
    data: {{ seizure_data|raw }}
    },{
    label: "Ereignisse",
    lineTension: 0.3,
    backgroundColor: "rgba(28, 200, 138, 0.05)",
    borderColor: "rgba(28, 200, 138, 1)",
    pointRadius: 3,
    pointBackgroundColor: "rgba(28, 200, 138, 1)",
    pointBorderColor: "rgba(28, 200, 138, 1)",
    pointHoverRadius: 3,
    pointHoverBackgroundColor: "rgba(28, 200, 138, 1)",
    pointHoverBorderColor: "rgba(28, 200, 138, 1)",
    pointHitRadius: 10,
    pointBorderWidth: 2,
    data: {{ event_data|raw }}
    },
    /*{
    label: "Tagebucheinträge",
    lineTension: 0.3,
    backgroundColor: "rgba(78, 115, 223, 0.05)",
    borderColor: "rgba(78, 115, 223, 1)",
    pointRadius: 3,
    pointBackgroundColor: "rgba(78, 115, 223, 1)",
    pointBorderColor: "rgba(78, 115, 223, 1)",
    pointHoverRadius: 3,
    pointHoverBackgroundColor: "rgba(78, 115, 223, 1)",
    pointHoverBorderColor: "rgba(78, 115, 223, 1)",
    pointHitRadius: 10,
    pointBorderWidth: 2,
    data: {{ diaryentry_data|raw }}
    },*/
    {
    label: "Medikationen",
    lineTension: 0.3,
    backgroundColor: "rgba(246, 194, 62, 0.05)",
    borderColor: "rgba(246, 194, 62, 1)",
    pointRadius: 3,
    pointBackgroundColor: "rgba(246, 194, 62, 1)",
    pointBorderColor: "rgba(246, 194, 62, 1)",
    pointHoverRadius: 3,
    pointHoverBackgroundColor: "rgba(246, 194, 62, 1)",
    pointHoverBorderColor: "rgba(246, 194, 62, 1)",
    pointHitRadius: 10,
    pointBorderWidth: 2,
    data: {{ medication_data|raw }}
    }
    ],
    },
    options: {
    maintainAspectRatio: false,
    layout: {
    padding: {
    left: 10,
    right: 25,
    top: 25,
    bottom: 0
    }
    },
    scales: {
    xAxes: [{
    time: {
    unit: 'date'
    },
    gridLines: {
    display: false,
    drawBorder: false
    },
    ticks: {
    maxTicksLimit: 7
    }
    }],
    yAxes: [{
    ticks: {
    maxTicksLimit: 5,
    padding: 10,
    // Include a dollar sign in the ticks
    callback: function(value, index, values) {
    //return '$' + number_format(value);
    return number_format(value);
    }
    },
    gridLines: {
    color: "rgb(234, 236, 244)",
    zeroLineColor: "rgb(234, 236, 244)",
    drawBorder: false,
    borderDash: [2],
    zeroLineBorderDash: [2]
    }
    }],
    },
    legend: {
    display: true,
    position: 'bottom'
    },
    tooltips: {
    backgroundColor: "rgb(255,255,255)",
    bodyFontColor: "#858796",
    titleMarginBottom: 10,
    titleFontColor: '#6e707e',
    titleFontSize: 14,
    borderColor: '#dddfeb',
    borderWidth: 1,
    xPadding: 15,
    yPadding: 15,
    displayColors: false,
    intersect: false,
    mode: 'index',
    caretPadding: 10,
    callbacks: {
    label: function(tooltipItem, chart) {
    var datasetLabel = chart.datasets[tooltipItem.datasetIndex].label || '';
    return datasetLabel + ': ' + number_format(tooltipItem.yLabel);
    }
    }
    }
    }
    });

    // Set new default font family and font color to mimic Bootstrap's default styling
    Chart.defaults.global.defaultFontFamily = 'Nunito', '-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,"Helvetica Neue",Arial,sans-serif';
    Chart.defaults.global.defaultFontColor = '#858796';

    // Pie Chart
    var ctx = document.getElementById("myPieChart");
    var myPieChart = new Chart(ctx, {
    type: 'doughnut',
    data: {
    //labels: ["Tagebucheinträge", "Ereignisse", "Anfälle", "Medikationen"],
    labels: ["Ereignisse", "Anfälle", "Medikationen"],
    datasets: [{
    /* data: [{{ diaryentry_count }}, {{ event_count }}, {{ seizure_count }}, {{ medication_count }}],
        backgroundColor: ['#4e73df', '#1cc88a', '#e74a3b', '#f6c23e'],
        hoverBackgroundColor: ['#2e59d9', '#17a673', '#be2617', '#dda20a'],
        hoverBorderColor: "rgba(234, 236, 244, 1)",
    }],*/
    data: [{{ event_count }}, {{ seizure_count }}, {{ medication_count }}],
    backgroundColor: ['#1cc88a', '#e74a3b', '#f6c23e'],
    hoverBackgroundColor: ['#17a673', '#be2617', '#dda20a'],
    hoverBorderColor: "rgba(234, 236, 244, 1)",
    }],
    },
    options: {
        maintainAspectRatio: false,
        tooltips: {
            backgroundColor: "rgb(255,255,255)",
            bodyFontColor: "#858796",
            borderColor: '#dddfeb',
            borderWidth: 1,
            xPadding: 15,
            yPadding: 15,
            displayColors: false,
            caretPadding: 10,

    },
    legend: {
        display: false
    },
    cutoutPercentage: 75,
    },
    });

    // Call the dataTables jQuery plugin
    $(document).ready(function() {
        $('#dataTable').DataTable( {
            "language": {
                "url": "//cdn.datatables.net/plug-ins/1.10.19/i18n/German.json"
            },
            "order": [[ 0, "desc" ]]

        });
    });
{% endblock %}